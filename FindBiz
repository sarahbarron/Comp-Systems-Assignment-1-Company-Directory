#!/bin/bash

# Author: Sarah Barron
# Module: Computer Systems and Networks
# Assignment-1: Linux Shell Scripting

# Description: FindBiz
# A script which will allow the user to search for an existing business based
# upon any of the businesses information and search for a duplicate contact

# Check there are search arguments in the command 
if [ $# > 1 ]
then
	print "-----------------------------------------------------------------------------------------------------------"

	# The 1st argument is either find (for the search command) or dupl (for checking if the contact is a duplicate)
	# If the 1st argument is find do the following
	if [ "$1" == "find" ]
	then
		# Create a string command using a while loop to loop through arguments
		# The string will be made up of a command that searches for the first argument in
		# the BusinessDetails.txt file, if there are more than 1 arguments
		# The initial results are piped into another grep search for the next argument
		# and so on until the final argument is searched for. This filters/narrows the
		# results down to the contact that matches all command line arguments
		# even if the order of arguments is different to the order of the contact details in the 
		# BusinessDetails.txt file
		# This while loop will give you the most acurate result if all arguments are in the line 
		# however if one of the arguments is missing from the line it won't return a match
		FindCommand="grep --color=always -i \"$2\" BusinessDetails.txt | uniq"
		num=3
		while [ $num -le $# ]
		do
			FindCommand="$FindCommand | grep --color=always -i \"${!num}\""
			num=$(expr $num + 1)
		done

		# eval is a built in command that takes a string as its argument and runs the command stored in
		# the argument, The command is then piped into a sed command to remove any | symbols from the results 
		# and replace them with , symbol, to make it more legible
		# ref: https://stackoverflow.com/questions/2355148/run-a-string-as-a-command-within-a-bash-script
		eval "$FindCommand" | sed 's/|/, /g'

		# count the number of matches
		TotalMatch=`eval "$FindCommand | wc -l"`

		# If there are no matches of all arguments in the previous while loop 
		# then search for each argument independently,
		if [ $TotalMatch -eq 0 ]
		then
			i=2
			TotalMatch=0
			while [ $i -le $# ]
			do
				grep --color=always -i "${!i}" BusinessDetails.txt | sort | uniq
				Count=$(grep --color=always -i "${!i}" BusinessDetails.txt | wc -l)
				TotalMatch=$(expr $TotalMatch + $Count)
				i=$(expr $i + 1)
			done
		fi

		# If there are still no matched lines print a message to say this and exit
		if [ $TotalMatch -eq 0 ]
		then
			SearchFor=$(echo "$*" | sed 's/^.....//')
			echo
			echo "$SearchFor : could not be found in the Company Directory"
			echo
			exit 1
		fi
		exit 0

	# If the 1st argument is dupl check for duplicate contacts
	# Contacts must have a unique email addresses must be unique
	# This checks if there is an email address the same as the new contacts email address already stored
	# A false exit 0 is returned if there is no duplicate
	# A true exit 1 is returned if tehre is a duplicate
	elif [ "$1" == "dupl" ]
	then
		# Filter the BusinessDetails.txt file to return just email addresses
                # search for the 2nd argument (email address) in the list of emails
                DupContact=$(awk -F '|' '{print $5}' BusinessDetails.txt | grep -i "^$2$")

                # count the number of matches
                DupNumOfMatches=$(awk -F '|' '{print $5}' BusinessDetails.txt | grep -i "^$2$" | wc -l)

                # if there are no matches exit with a false exit status 1
                # otherwise inform the user there is a contact already stored for this company with the same email address and exit true
                if [ $DupNumOfMatches -eq 0 ]
                then
                	exit 1
                else
                        echo
                        echo "DUPLICATE Contacts are not allowed"
                        echo
                        echo "The following contact is already stored with the same email address as the one provided"
			echo
			echo '***' `echo $DupContact | sed 's/|/, /g'` '***' 
                        echo 
                        echo "If you do want to add this new contact please remove the stored contact first and try again"
                        exit 0
		fi
	fi
fi
